- name: Download MySQL config
  get_url:
    url: https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
    dest: /tmp/mysql-apt-config_0.8.12-1_all.deb

- name: select version os
  shell: echo mysql-apt-config mysql-apt-config/repo-codename select bionic | sudo debconf-set-selections;
- name: select version mysql
  shell: echo mysql-apt-config mysql-apt-config/select-server select mysql-5.7 | sudo debconf-set-selections;
- name: select tools
  shell: echo mysql-apt-config mysql-apt-config/select-tools select Enabled | sudo debconf-set-selections;
- name: select preview
  shell: echo mysql-apt-config mysql-apt-config/select-preview select Disabled | sudo debconf-set-selections;

- name: select product ok
  shell: echo mysql-apt-config mysql-apt-config/select-product select Ok | sudo debconf-set-selections;

- name: DPKG Binary Package
  shell: dpkg -i /tmp/mysql-apt-config_0.8.12-1_all.deb
  environment:
    DEBIAN_FRONTEND: noninteractive
  register: res_apt

- name: dump
  debug:
    msg: "{{ res_apt }}"

# update repo
- name: Update repo
  shell: apt update
  register: apt_update

- name: dump update
  debug:
    msg: "{{ apt_update }}"

- name: install pip3
  apt:
    name: python3-pip

- name: Make sure pymysql is present
  become: true
  pip:
    name: pymysql
    state: present

- name: Install mysql client 5.7
  become: root
  command: apt install -f mysql-client=5.7.36-1ubuntu18.04 -y

- name: Install community server
  apt:
    name: mysql-community-server=5.7.36-1ubuntu18.04

- name: Install mysql-server 5.7
  apt:
    name: mysql-server=5.7.36-1ubuntu18.04

- name: Enable MySQL Service on Boot
  ansible.builtin.systemd:
    name: mysql
    enabled: yes

- name: Start MySQL Server
  ansible.builtin.systemd:
    name: mysql
    state: started

- name: Change the authentication plugin of MySQL root user to mysql_native_password
  shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'

- name: Flush Privileges
  shell: mysql -u root -e 'FLUSH PRIVILEGES'

- name: Set MySQL root password
  mysql_user:
    login_host: 'localhost'
    login_user: 'root'
    login_password: ''
    name: 'root'
    password: '{{ mysql_root_password }}'
    state: present

- name: Create `/root/.my.cnf` with root password credentials
  template:
    src:  my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600
  become: yes

- name: Copy mysqld.cnf for enable remote mysql access
  copy:
    src: "mysqld.cnf"
    dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    mode: 0644

- name: Restart MySQL Server
  ansible.builtin.systemd:
      name: mysql
      state: restarted